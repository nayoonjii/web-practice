<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /><!-- 스프링 컨트롤러 클래스 선언시 애노테이션을 이용해서 작성할수있다는 것을 
							  선언하는 의미 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 개발툴 가상경로인 src/main/webapp/resources 안에 있는 HTML,css,javascript,jQuery,이미지 등 
		뷰페이지 개발에 필요한 리소스 자원이 들어가는 경로이다. -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- /WEB-INF/views 경로는 뷰페이지 경로 즉 뷰리졸브 이다. -->
		<beans:property name="suffix" value=".jsp" />
		<!-- 뷰페이지 확장자. jsp설정부분. 이렇게 설정하면 스프링 컨트롤러 클래스 만들때 뷰리졸브 경로와 확장자
			생략이 가능하다. -->
	</beans:bean>
	
	<context:component-scan base-package="net.daum.controller" />
	<!-- context:component-scan 은 오토 스캔이다. 즉 base-package 속성에 정의된 풀패키지 경로에 있는
		스프링 컨트롤러 클래스를 자동으로 찾아서 스프링에서 컨트로러로 인식하게 해준다.
		이럴때는  <annotation-driven /> 과 결합해서 처리된다. 마지막 패키지 경로인controller가 
		웹브라우저에 실행되는 포트번호 다음에 나오는 중간경로인 컨텍스트 패스 경로로 인식된다.
		http://localhost:포트번호/중간경로(컨텍스트 패스경로)-->
	
	<!-- 스프링 이진파일 업로드 api설정 =>첨부파일을 처리하는 빈 id설정 -->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	
</beans:beans>
