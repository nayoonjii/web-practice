<?xml version="1.0" encoding="UTF-8"?>

<!-- 
   1. Spring Legacy Project(Spring MVC Project) 에서는 서블릿 버전이 2.5이기 때문에 xml 네임스페이스를 2.5에서 3.1로 수정한다.
   2. 톰캣 7.0 버전 이후부터는  서블릿 3.0이상을 지원하므로 3.0이상부터는 pom.xml에 이진 업로드 라이브러리를 추가하지 않고, 
          서블릿 자체적인 파일업로드   api를 사용한다.-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://xmlns.jcp.org/xml/ns/javaee"
   xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
   id="WebApp_ID" version="3.1">

<!-- 
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
 -->
 
 
	<!-- 스프링 api인 ContextLoaderListener에의해서root-context.xml파일이 로드외어져서 실행된다.
	이파일의 역할은 스프링AOP를 통한 트랜잭션 적용(서비스),모델DAO설정,ORM인mybatis설정, 스프링 api를통한
	오라클연결(스프링 jdbc) -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 스프링 api인 DispatcherSevlet에의해서 로드 실행하는 servlet-context.xml
	파일의 역할은 스프링 컨트롤러를 통해서 해당 뷰페이지가 보이는 영역이다. -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		
		<!-- 이진파일(첨부된 파일:바이너리(binary) 파일) 업로드 설정 -->
      <multipart-config>
        <location>C:\\upload</location> <!-- 이진파일 업로드 서버 경로 -->
        <max-file-size>20971520</max-file-size> <!--업로드 되는 파일 최대크기->1MB*20=20MB -->
        <max-request-size>41943040</max-request-size><!-- 40mb -> 한번에 올릴 수 있는 최대 크기-->
        <file-size-threshold>20971520</file-size-threshold> <!-- 20MB ->메모리 사용크기 -->
      </multipart-config>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- method = post방식으로 전달된 한글을 안깨지게 한다. -->
	<filter>
	  <filter-name>encoding</filter-name>
	  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	  <init-param>
	    <param-name>encoding</param-name>
	    <param-value>UTF-8</param-value>
	  </init-param>
	</filter>
	
	<filter-mapping>
	  <filter-name>encoding</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	

</web-app>












